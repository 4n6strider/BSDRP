#!/bin/sh
# Helper script for building Maximum BSDRP features validation lab
# https://bsdrp.net/documentation/examples/maximum_bsdrp_features_lab
set -eu

usage () {
	echo "Helper script for configuring BSDRP regrestion feature lab"
	echo "DO NOT USE THIS SCRIPT ON OTHER ROUTERS: IT WILL ERASE YOUR CONFIGURATION"
	echo "Usage:"
	echo "$0 vm-number"
	echo "Example:"
	echo "$0 vm1"
	exit 1
}

vm1 () {
sysrc hostname=R1
sysrc gateway_enable=NO
sysrc ipv6_gateway_enable=NO
sysrc ifconfig_em0=up
sysrc cloned_interfaces=lagg0
sysrc ifconfig_lagg0="laggproto loadbalance laggport em0 SYNCDHCP"
sysrc ifconfig_lagg0_ipv6="inet6 accept_rtadv"
sysrc sshd_enable=yes
ifconfig -l | grep -q vtnet && sed -i "" 's/em/vtnet/g' /etc/rc.conf
echo "net.link.lagg.0.lacp.lacp_strict_mode=0" >> /etc/sysctl.conf
config save
hostname R1
service routing restart || true
service netif restart
service sysctl reload
service sshd start
echo "VM1 configured"
}

vm2 () {
sysrc hostname=R2
sysrc rtadvd_enable=YES
sysrc rtadvd_interfaces="em0"
sysrc ifconfig_em0="inet 10.0.12.2/24"
sysrc ifconfig_em0_ipv6="inet6 2001:db8:12::2 prefixlen 64"
sysrc ifconfig_em0_alias0="inet 10.0.12.254/32 vhid 1 pass testpass"
sysrc ifconfig_em0_alias1="inet6 2001:db8:12::fe prefixlen 128 vhid 1 pass testpass"
sysrc ifconfig_em1="inet 10.0.23.2/24"
sysrc ifconfig_em1_ipv6="inet6 2001:db8:23::2 prefixlen 64"
sysrc cloned_interfaces="lo1"
sysrc ifconfig_lo1="inet 10.0.0.2/32"
sysrc ifconfig_lo1_ipv6="inet6 2001:db8::2 prefixlen 128"
sysrc frr_enable=YES
sysrc dhcprelya_enable=YES
sysrc dhcprelya_servers="10.0.45.5"
sysrc dhcprelya_ifaces=em0
sysrc mpd_enable=YES
sysrc mpd_flags="-b -s ppp"
sysrc ngnetflow_enable=YES
sysrc ngnetflow_if=em0
sysrc ngnetflow_dst="10.0.12.1:2055"
sysrc ipsec_enable=YES
sysrc ipsec_file="/etc/ipsec.conf"
sysrc pimd_enable=YES
ifconfig -l | grep -q vtnet && sed -i "" 's/em/vtnet/g' /etc/rc.conf

mount -uw /
echo "carp_load="YES"" >> /boot/loader.conf.local
mount -ur /

cat > /usr/local/etc/mpd5/if-up.sh <<EOF
#!/bin/sh
set -e
logger "\$0 called with parameters: \$@"
if [ "\$2" == "inet6" ]; then
        if ifconfig \$1 \$2 2001:db8::24:2; then
        logger "\$0: \$cmd successfull"
        return 0
        else
        logger "\$0: \$cmd failed"
        return 1
        fi
else
        return 0
fi
EOF

chmod +x /usr/local/etc/mpd5/if-up.sh

cat > /usr/local/etc/mpd5/mpd.conf <<EOF
# Configuring a server PPTP VPN with tunnels to R4
default:
        load vpnipv4
        load vpnipv6
vpnipv4:
        # Create bundle called vpnipv4
        create bundle static vpnipv4
        # IP of client and server, on another subnet for avoiding problems
        set ipcp ranges 10.4.24.2/32 10.4.24.4/32
        # Remote LAN subnet: Learned by ISIS
        #set iface route 10.0.45.0/24
        # Enable Microsoft Point-to-Point encryption (MPPE)
        set bundle enable compression
        set ccp yes mppc
        set mppc yes e40
        set mppc yes e128
        set bundle enable crypt-reqd
        set mppc yes stateless
        # Create a static pptp link called lvpnipv4
        create link static lvpnipv4 pptp
        # Attach this link to vpnipv4
        set link action bundle vpnipv4
        # Set somes link settings
        set link no pap
        set link yes chap
        set auth authname "VpnLogin4"
        # Reduce the size of the outgoing packet for avoiding fragmentation
        set link mtu 1460
        set link keep-alive 10 75
        # max-redial:
        # Server side, need to be "-1"
        # Client side, need to be positive (0 for allways)
        set link max-redial -1
        # Local WAN IP addresse
        set pptp self 10.0.0.2
        # Remote WAN IP addresse
        set pptp peer 10.0.0.4
        # Allow incoming call
        set link enable incoming

vpnipv6:
        # Create bundle called vpnipv6
        create bundle static vpnipv6
        # Don't know how to disable IPv4 ipcp
        set ipcp ranges 10.6.24.2/32 10.6.24.4/32
        # Enable IPv6
        set bundle enable ipv6cp
        # Remote LAN subnet: Learned by ISIS
        #set iface route 2001:db8:45::/64
        # Need to statically set inet6 address
        set iface up-script /usr/local/etc/mpd5/if-up.sh
        # Enable Microsoft Point-to-Point encryption (MPPE)
        set bundle enable compression
        set ccp yes mppc
        set mppc yes e40
        set mppc yes e128
        set bundle enable crypt-reqd
        set mppc yes stateless
        # Create a static pptp link called lvpnipv4
        create link static lvpnipv6 pptp
        # Attach this link to vpnipv6
        set link action bundle vpnipv6
        # Set somes link settings
        set link no pap
        set link yes chap
        set auth authname "VpnLogin6"
        # Reduce the size of the outgoing packet for avoiding fragmentation
        set link mtu 1460
        set link keep-alive 10 75
        # max-redial:
        # Server side, need to be "-1"
        # Client side, need to be positive (0 for allways)
        set link max-redial -1
        # Local WAN IP addresse
        set pptp self 2001:db8::2
        # Remote WAN IP addresse
        set pptp peer 2001:db8::4
        # Allow incoming call
        set link enable incoming
EOF

cat > /usr/local/etc/mpd5/mpd.secret <<EOF
VpnLogin4       VpnPassword4
VpnLogin6       VpnPassword6
EOF

cat > /etc/ipsec.conf <<EOF
flush ;
add 10.0.23.2 10.0.23.3 tcp 0x1000 -A tcp-md5 "abigpassword" ;
add 10.0.23.3 10.0.23.2 tcp 0x1001 -A tcp-md5 "abigpassword" ;
add -6 2001:db8:23::2 2001:db8:23::3 tcp 0x1002 -A tcp-md5 "abigpassword" ;
add -6 2001:db8:23::3 2001:db8:23::2 tcp 0x1003 -A tcp-md5 "abigpassword" ;
EOF

cat > /usr/local/etc/frr/bgpd.conf <<EOF
router bgp 100
 bgp router-id 0.0.0.0
 network 10.0.0.2/32
 neighbor 10.0.23.3 remote-as 100
 neighbor 10.0.23.3 soft-reconfiguration inbound
 neighbor 2001:db8:23::3 remote-as 100
 no neighbor 2001:db8:23::3 activate
!
 address-family ipv6
 network 2001:db8::2/128
 neighbor 2001:db8:23::3 activate
 neighbor 2001:db8:23::3 soft-reconfiguration inbound
 exit-address-family
EOF

cat > /usr/local/etc/frr/ospfd.conf <<EOF
interface ng0
 ip ospf network point-to-point
 ip ospf message-digest-key 1 md5 superpass
!
router ospf
 ospf router-id 0.0.0.2
 network 10.0.12.0/24 area 0.0.0.0
 network 10.4.24.0/24 area 0.0.0.0
 area 0.0.0.0 authentication message-digest
EOF

cat > /usr/local/etc/frr/ospf6d.conf <<EOF
interface ng0
 ipv6 ospf6 passive
interface ng1
 ipv6 ospf6 network point-to-point
router ospf6
 router-id 0.0.0.4
 redistribute isis
 interface ng1 area 0.0.0.0
 interface em0 area 0.0.0.0
 interface vtnet0 area 0.0.0.0
EOF


config save
hostname R2
kldload carp
service netif restart
service ipsec start
service rtadvd start
service frr start
service dhcprelya start
service mpd5 start
service ngnetflow start
service pimd start
echo "VM2 configured"
}

vm3 () {
sysrc hostname=R3
sysrc ifconfig_em1="inet 10.0.23.3/24"
sysrc ifconfig_em2="inet 10.0.34.3/24"
sysrc ifconfig_em1_ipv6="inet6 2001:db8:23::3 prefixlen 64"
sysrc ifconfig_em2_ipv6="inet6 2001:db8:34::3 prefixlen 64"
sysrc bird_enable=YES
sysrc bird6_enable=YES
sysrc pf_enable=YES
sysrc pf_rules="/etc/pf.conf"
sysrc ipsec_enable=YES
sysrc ipsec_file="/etc/ipsec.conf"
ifconfig -l | grep -q vtnet && sed -i "" 's/em/vtnet/g' /etc/rc.conf

cat > /etc/pf.conf <<EOF
#Variables definitions
TO_R2_if = "{" vtnet1 em1 "}"
TO_R4_if = "{" vtnet2 em2 "}"
R2 = "10.0.0.2/32"
R4 = "10.0.0.4/32"

## ALTQ rules
# Queue outgoing from \$TO_R4_if (R2 => R4)
# Rate-limit inet 4 VPN traffic to 10Mb
altq on \$TO_R4_if hfsc bandwidth 100Mb queue { VPN4_TO_R4, OTHER_TO_R4 }
queue VPN4_TO_R4 bandwidth 10Mb hfsc(upperlimit 10Mb)
queue OTHER_TO_R4 bandwidth 90Mb hfsc(default)

# Queue for outgoing traffic from \$TO_R2_if (R4 => R2)
altq on \$TO_R2_if hfsc bandwidth 100Mb queue { VPN4_TO_R2, OTHER_TO_R2 }
queue VPN4_TO_R2 bandwidth 10Mb hfsc(upperlimit 10Mb)
queue OTHER_TO_R2 bandwidth 90Mb hfsc(default)

## PF rules

# R2 => R4
# Shapping works on outgoing traffic only, but need to 'mark' traffic
# entering the interface for putting returning traffic in the good queue
pass in quick on \$TO_R2_if proto gre from \$R2 to \$R4 queue VPN4_TO_R2
# Apply ALTQ to traffic that get out from \$TO_R4_if
pass out quick on \$TO_R4_if proto gre from \$R2 to \$R4 queue VPN4_TO_R4

# PF rules R4 => R2
pass in quick on \$TO_R4_if proto gre from \$R4 to \$R2 queue VPN4_TO_R4
pass out quick on \$TO_R2_if proto gre from \$R4 to \$R2 queue VPN4_TO_R2
EOF
cat > /etc/ipsec.conf <<EOF
flush ;
add 10.0.23.2 10.0.23.3 tcp 0x1000 -A tcp-md5 "abigpassword" ;
add 10.0.23.3 10.0.23.2 tcp 0x1001 -A tcp-md5 "abigpassword" ;
add -6 2001:db8:23::2 2001:db8:23::3 tcp 0x1002 -A tcp-md5 "abigpassword" ;
add -6 2001:db8:23::3 2001:db8:23::2 tcp 0x1003 -A tcp-md5 "abigpassword" ;
EOF

cat > /usr/local/etc/bird.conf <<EOF
# Configure logging
log syslog all;
log "/var/log/bird.log" all;
log stderr all;

# Override router ID
router id 0.0.0.3;

# Sync bird routing table with kernel
protocol kernel {
        export all;
}

# Include device route (warning, a device route is a /32)
protocol device {
        scan time 10;
}

# Include directly connected network
protocol direct {
        interface "vtnet1", "em1", "vtnet2", "em2";
}

protocol rip R4 {
        export all;
        interface "vtnet2","em2" {
            version 2;
            password "rippassword";
            authentication cryptographic;
        };
}

protocol bgp R2 {
        local as 100;
		neighbor 10.0.23.2 as 100;
        import all;
        export all;
}
EOF

cat > /usr/local/etc/bird6.conf <<EOF
# Configure logging
log syslog all;
log "/var/log/bird6.log" all;
log stderr all;

# Override router ID
router id 0.0.0.3;

# Sync bird routing table with kernel
protocol kernel {
        export all;
}

protocol device {
        scan time 10;
}
protocol direct {
        interface "vtnet1", "em1", "vtnet2", "em2";
}

protocol rip R4 {
        export all;
        interface "vtnet2","em2" ;
}

protocol bgp R2 {
        local as 100;
        neighbor 2001:db8:23::2 as 100;
        import all;
        export all;
}
EOF

config save
hostname R3
service netif restart
service ipsec start
service pf start
service bird start
service bird6 start
echo "VM3 configured"
}

vm4 () {
sysrc hostname=R4
sysrc ifconfig_em3="inet 10.0.45.4/24"
sysrc ifconfig_em3_ipv6="inet6 2001:db8:45::4 prefixlen 64"
sysrc ifconfig_em2="10.0.34.4/24"
sysrc ifconfig_em2_ipv6="inet6 2001:db8:34::4 prefixlen 64"
sysrc cloned_interfaces="lo1"
sysrc ifconfig_lo1="inet 10.0.0.4/32"
sysrc ifconfig_lo1_ipv6="inet6 2001:db8::4 prefixlen 128"
sysrc frr_enable=YES
sysrc mpd_enable=YES
sysrc mpd_flags="-b -s ppp"
sysrc firewall_enable=YES
sysrc firewall_script="/etc/ipfw.rules"
sysrc ipfw_netflow_enable=YES
sysrc ipfw_netflow_ip=10.0.45.5
sysrc ipfw_netflow_port=2055
sysrc ipfw_netflow_version=9
sysrc pimd_enable=YES
ifconfig -l | grep -q vtnet && sed -i "" 's/em/vtnet/g' /etc/rc.conf

cat > /usr/local/etc/frr/ripd.conf <<EOF
key chain rippass
 key 1
  key-string rippassword
interface em2
 ip rip authentication key-chain rippass
 ip rip authentication mode md5
interface vtnet2
 ip rip authentication key-chain rippass
 ip rip authentication mode md5
router rip
 version 2
 network lo1
 network em2
 network vtnet2
EOF

cat > /usr/local/etc/frr/ripngd.conf <<EOF
router ripng
 network lo1
 network em2
 network vtnet2
EOF

cat > /usr/local/etc/frr/ospfd.conf <<EOF
interface ng0
 ip ospf message-digest-key 1 md5 superpass
 ip ospf network point-to-point
!
router ospf
 ospf router-id 0.0.0.4
 redistribute isis
 passive-interface em3
 passive-interface vtnet3
 network 10.0.4.4/24 area 0.0.0.0
 network 10.4.24.0/24 area 0.0.0.0
 network 10.0.45.0/24 area 0.0.0.0
 area 0.0.0.0 authentication message-digest
EOF

cat > /usr/local/etc/frr/ospf6d.conf <<EOF
interface ng0
 ipv6 ospf6 passive
interface ng1
 ipv6 ospf6 network point-to-point
router ospf6
 router-id 0.0.0.4
 redistribute isis
 interface ng1 area 0.0.0.0
 interface lo1 area 0.0.0.0
EOF

cat > /usr/local/etc/frr/isisd.conf <<EOF
interface lo1
 ip router isis BSDRP
 isis passive 
interface em3
 ip router isis BSDRP
interface vtnet3
 ip router isis BSDRP
router isis BSDRP
 net 49.0001.1720.1600.4004.00
 metric-style wide
 redistribute ipv4 ospf level-1
 redistribute ipv6 ospf6 level-1
EOF

cat > /usr/local/etc/mpd5/if-up.sh <<EOF
#!/bin/sh
set -e
logger "\$0 called with parameters: \$@"
if [ "\$2" == "inet6" ]; then
        if ifconfig \$1 \$2 2001:db8::24:4; then
        logger "\$0: \$cmd successfull"
        return 0
        else
        logger "\$0: \$cmd failed"
        return 1
        fi
else
        return 0
fi
EOF

chmod +x /usr/local/etc/mpd5/if-up.sh

cat > /usr/local/etc/mpd5/mpd.conf <<EOF
default:
        load vpnipv4
        load vpnipv6
vpnipv4:
        # Create bundle called vpnipv4
        create bundle static vpnipv4
        # Getting IP from the server
        set ipcp ranges 0.0.0.0/0
        # Remote LAN subnet: Learned by ISIS
        #set iface route 10.0.12.0/24
        # Enable Microsoft Point-to-Point encryption (MPPE)
        set bundle enable compression
        set ccp yes mppc
        set mppc yes e40
        set mppc yes e128
        set bundle enable crypt-reqd
        set mppc yes stateless
        # Create a static pptp link called lvpnipv4
        create link static lvpnipv4 pptp
        # Attach this link to vpnipv4
        set link action bundle vpnipv4
        # Set somes link settings
        set link no pap
        set link yes chap
        set auth authname VpnLogin4
        # Reduce the size of the outgoing packet for avoiding fragmentation
        set link mtu 1460
        set link keep-alive 10 75
        # max-redial:
        # Server side, need to be "-1"
        # Client side, need to be positive (0 for allways)
        set link max-redial 0
        # Local WAN IP addresse
        set pptp self 10.0.0.4
        # Remote WAN IP addresse
        set pptp peer 10.0.0.2
        # Open (initiate) the link to the server
        open
vpnipv6:
        # Create bundle called vpnipv6
        create bundle static vpnipv6
        # Getting IP from the server
        set ipcp ranges 0.0.0.0/0
        # Enable IPv6
        set bundle enable ipv6cp
        # Remote LAN subnet: Learned by ISIS
        #set iface route 2001:db8:12::/64
        # Need to statically configure inet6 adress
        set iface up-script /usr/local/etc/mpd5/if-up.sh
        # Create a static pptp link called lvpnipv6
        create link static lvpnipv6 pptp
        # Attach this link to vpnipv6
        set link action bundle vpnipv6
        # Set somes link settings
        set link no pap
        set link yes chap
        set auth authname VpnLogin6
        # Reduce the size of the outgoing packet for avoiding fragmentation
        set link mtu 1460
        set link keep-alive 10 75
        # max-redial:
        # Server side, need to be "-1"
        # Client side, need to be positive (0 for allways)
        set link max-redial 0
        # Local WAN IP addresse
        set pptp self 2001:db8::4
        # Remote WAN IP addresse
        set pptp peer 2001:db8::2
        # Open (initiate) the link to the server
        open
EOF

cat > /usr/local/etc/mpd5/mpd.secret <<EOF
VpnLogin4       VpnPassword4
VpnLogin6       VpnPassword6
EOF

echo "# IPFW we need to let it to pass IPv6 Unknown Extension Header for IPv6 PPTP" >> /etc/sysctl.conf
echo "net.inet6.ip6.fw.deny_unknown_exthdrs=0" >> /etc/sysctl.conf

cat > /etc/ipfw.rules <<EOF
#!/bin/sh
fwcmd="/sbin/ipfw"
if ! kldstat -q -m dummynet; then
        kldload dummynet
fi

# Flush out the list before we begin.
\${fwcmd} -f flush
#Need to reduce the default queue size too
#explanation on chapter "7.2.1.        Pipe Queues"
#http://www.freebsd-howto.com/HOWTO/Ipfw-HOWTO
\${fwcmd} pipe 10 config bw 20Mbit/s queue 2Mbytes
\${fwcmd} pipe 20 config bw 20Mbit/s queue 2Mbytes
#Traffic getting out vtnet2, is VPN PPTP traffic
\${fwcmd} add 2000 pipe 10 all from 2001:db8::4 to 2001:db8::2 out via any
#Traffic getting out em3, is clear traffic
\${fwcmd} add 2001 pipe 20 all from 2001:db8:12::/64 to 2001:db8:56::/64 out via any
#We don't want to block traffic, only shape some
\${fwcmd} add 2002 allow ip from any to any
EOF

config save
hostname R4
service netif restart
service frr start
service mpd5 start
service ipfw start
service sysctl reload
service ipfw_netflow start
service pimd start
echo "VM4 configured"
}

vm5 () {
sysrc hostname=R5
sysrc ifconfig_em3="inet 10.0.45.5/24"
sysrc ifconfig_em3_ipv6="inet6 2001:db8:45::5 prefixlen 64"
sysrc ifconfig_em4="10.0.56.5/24"
sysrc ifconfig_em4_ipv6="inet6 2001:db8:56::5 prefixlen 64"
sysrc rtadvd_enable=YES
sysrc rtadvd_interfaces=em4
sysrc freevrrpd_enable=YES
sysrc dhcpd_enable=YES
sysrc dhcpd_flags="-q"
sysrc dhcpd_conf="/usr/local/etc/dhcpd.conf"
sysrc frr_enable=YES
sysrc nfacctd_enable=YES
sysrc pimd_enable=YES
cat > /usr/local/etc/freevrrpd.conf <<EOF
[VRID]
serverid = 1
interface = em4
# We want that this router is the master
priority = 101
addr = 10.0.56.254/24
password = vrid1
EOF

ifconfig -l | grep -q vtnet && sed -i "" 's/em/vtnet/g' /usr/local/etc/freevrrpd.conf

cat > /usr/local/etc/dhcpd.conf <<EOF
option domain-name "bsdrp.net";
default-lease-time 600;
max-lease-time 7200;
ddns-update-style none;
#Declare em3/vtnet3 network
subnet 10.0.45.0 netmask 255.255.255.0 {
}

#Declare R1 LAN and gateway
subnet 10.0.12.0 netmask 255.255.255.0 {
  range 10.0.12.1 10.0.12.1;
  option routers 10.0.12.254;
}
#Declare R6 subnet and gateway
subnet 10.0.56.0 netmask 255.255.255.0 {
  range 10.0.56.6 10.0.56.6;
  option routers 10.0.56.254;
}
EOF

cat > /usr/local/etc/frr/isisd.conf <<EOF
interface em3
 ip router isis BSDRP
interface vtnet3
 ip router isis BSDRP
interface em4
 ip router isis BSDRP
 isis passive
interface vtnet4
 ip router isis BSDRP
 isis passive
router isis BSDRP
 net 49.0001.1720.1600.5005.00
 metric-style wide
EOF

cat > /usr/local/etc/nfacctd.conf<<EOF
daemonize: true
syslog: daemon
!
! interested in in and outbound traffic
aggregate: src_host,dst_host
nfacctd_ip: 10.0.45.5
nfacctd_port: 2055
aggregate[ip]: src_host, dst_host, timestamp_start, timestamp_end, src_port, dst_port, proto, src_as, dst_as, peer_src_ip
plugins: print[ip]
print_output: csv
print_refresh_time: 300
print_history: 5m
print_output_file[ip]: /tmp/file-%Y%m%d-%H%M.txt
print_history_roundoff: m
print_output_file_append: true
files_umask: 022
EOF

config save
hostname R5
service netif restart
service rtadvd start
service isc-dhcpd start
service freevrrpd start
service frr start
service nfacctd start
service pimd start
echo "VM5 configured"
}

vm6 () {
sysrc hostname=R6
sysrc ifconfig_em4="up"
sysrc cloned_interfaces="lagg0"
sysrc ifconfig_lagg0="laggproto failover laggport em4 SYNCDHCP"
sysrc ifconfig_lagg0_ipv6="inet6 accept_rtadv"
sysrc bsnmpd_enable=YES
sysrc gateway_enable=NO
sysrc ipv6_gateway_enable=NO
ifconfig -l | grep -q vtnet && sed -i "" 's/em/vtnet/g' /etc/rc.conf
config save
hostname R6
service routing restart || true
service netif restart
service bsnmpd start
echo "VM6 configured"
}

### Main

[ $# -lt 1 ] && usage

$1
